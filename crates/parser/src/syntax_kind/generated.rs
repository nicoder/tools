#![doc = "This file has been autogenerated. Do not modify."]
#![doc = "To update, run: `cargo run --bin sourcegen"]
#![allow(bad_style)]
#[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash, Debug)]
#[repr(u16)]
pub enum SyntaxKind {
	ABSTRACT_CLASS_DECLARATION,
	ABSTRACT_METHOD_SIGNATURE,
	ABSTRACT_TOKEN,
	ACCESSIBILITY_MODIFIER,
	AMBIENT_DECLARATION,
	AMP_AMP_EQ_TOKEN,
	AMP_AMP_TOKEN,
	AMP_EQ_TOKEN,
	AMP_TOKEN,
	ANY_TOKEN,
	ARGUMENTS,
	ARRAY,
	ARRAY_PATTERN,
	ARRAY_TYPE,
	ARROW_FUNCTION,
	ASSERTS,
	ASSERTS_TOKEN,
	ASSIGNMENT_EXPRESSION,
	ASSIGNMENT_PATTERN,
	ASYNC_TOKEN,
	AS_EXPRESSION,
	AS_TOKEN,
	AT_TOKEN,
	AUGMENTED_ASSIGNMENT_EXPRESSION,
	AWAIT_EXPRESSION,
	AWAIT_TOKEN,
	BANG_EQ_EQ_TOKEN,
	BANG_EQ_TOKEN,
	BANG_TOKEN,
	BINARY_EXPRESSION,
	BOOLEAN_TOKEN,
	BQUOTE_TOKEN,
	BREAK_STATEMENT,
	BREAK_TOKEN,
	CALL_EXPRESSION,
	CALL_SIGNATURE,
	CARET_EQ_TOKEN,
	CARET_TOKEN,
	CASE_TOKEN,
	CATCH_CLAUSE,
	CATCH_TOKEN,
	CLASS,
	CLASS_BODY,
	CLASS_DECLARATION,
	CLASS_HERITAGE,
	CLASS_TOKEN,
	COLON_TOKEN,
	COMMA_TOKEN,
	COMMENT,
	COMPUTED_PROPERTY_NAME,
	CONDITIONAL_TYPE,
	CONSTRAINT,
	CONSTRUCTOR_TYPE,
	CONSTRUCT_SIGNATURE,
	CONST_TOKEN,
	CONTINUE_STATEMENT,
	CONTINUE_TOKEN,
	DASH_DASH_TOKEN,
	DASH_EQ_TOKEN,
	DASH_QMARK_COLON_TOKEN,
	DASH_TOKEN,
	DEBUGGER_STATEMENT,
	DEBUGGER_TOKEN,
	DECLARATION,
	DECLARE_TOKEN,
	DECORATOR,
	DEFAULT_TOKEN,
	DEFAULT_TYPE,
	DELETE_TOKEN,
	DOLLAR_LBRACE_TOKEN,
	DOT_DOT_DOT_TOKEN,
	DOT_TOKEN,
	DO_STATEMENT,
	DO_TOKEN,
	DQUOTE_TOKEN,
	ELSE_CLAUSE,
	ELSE_TOKEN,
	EMPTY_STATEMENT,
	ENUM_ASSIGNMENT,
	ENUM_BODY,
	ENUM_DECLARATION,
	ENUM_TOKEN,
	EQ_EQ_EQ_TOKEN,
	EQ_EQ_TOKEN,
	EQ_GT_TOKEN,
	EQ_TOKEN,
	ESCAPE_SEQUENCE,
	EXISTENTIAL_TYPE,
	EXPORT_CLAUSE,
	EXPORT_SPECIFIER,
	EXPORT_STATEMENT,
	EXPORT_TOKEN,
	EXPRESSION,
	EXPRESSION_STATEMENT,
	EXTENDS_CLAUSE,
	EXTENDS_TOKEN,
	FALSE,
	FINALLY_CLAUSE,
	FINALLY_TOKEN,
	FLOW_MAYBE_TYPE,
	FORMAL_PARAMETERS,
	FOR_IN_STATEMENT,
	FOR_STATEMENT,
	FOR_TOKEN,
	FROM_TOKEN,
	FUNCTION,
	FUNCTION_DECLARATION,
	FUNCTION_SIGNATURE,
	FUNCTION_TOKEN,
	FUNCTION_TYPE,
	GENERATOR_FUNCTION,
	GENERATOR_FUNCTION_DECLARATION,
	GENERIC_TYPE,
	GET_TOKEN,
	GLOBAL_TOKEN,
	GT_EQ_TOKEN,
	GT_GT_EQ_TOKEN,
	GT_GT_GT_EQ_TOKEN,
	GT_GT_GT_TOKEN,
	GT_GT_TOKEN,
	GT_TOKEN,
	HASH_BANG_LINE,
	IDENTIFIER,
	IF_STATEMENT,
	IF_TOKEN,
	IMPLEMENTS_CLAUSE,
	IMPLEMENTS_TOKEN,
	IMPORT,
	IMPORT_ALIAS,
	IMPORT_CLAUSE,
	IMPORT_REQUIRE_CLAUSE,
	IMPORT_SPECIFIER,
	IMPORT_STATEMENT,
	IMPORT_TOKEN,
	INDEX_SIGNATURE,
	INDEX_TYPE_QUERY,
	INFER_TOKEN,
	INFER_TYPE,
	INSTANCEOF_TOKEN,
	INTERFACE_DECLARATION,
	INTERFACE_TOKEN,
	INTERNAL_MODULE,
	INTERSECTION_TYPE,
	IN_TOKEN,
	IS_TOKEN,
	JSX_ATTRIBUTE,
	JSX_CLOSING_ELEMENT,
	JSX_ELEMENT,
	JSX_EXPRESSION,
	JSX_FRAGMENT,
	JSX_NAMESPACE_NAME,
	JSX_OPENING_ELEMENT,
	JSX_SELF_CLOSING_ELEMENT,
	JSX_TEXT,
	KEYOF_TOKEN,
	LABELED_STATEMENT,
	LBRACE_PIPE_TOKEN,
	LBRACE_TOKEN,
	LBRACK_TOKEN,
	LET_TOKEN,
	LEXICAL_DECLARATION,
	LITERAL_TYPE,
	LOOKUP_TYPE,
	LPAREN_TOKEN,
	LT_EQ_TOKEN,
	LT_LT_EQ_TOKEN,
	LT_LT_TOKEN,
	LT_TOKEN,
	MAPPED_TYPE_CLAUSE,
	MEMBER_EXPRESSION,
	META_PROPERTY,
	METHOD_DEFINITION,
	METHOD_SIGNATURE,
	MODULE,
	MODULE_TOKEN,
	NAMED_IMPORTS,
	NAMESPACE_IMPORT,
	NAMESPACE_TOKEN,
	NESTED_IDENTIFIER,
	NESTED_TYPE_IDENTIFIER,
	NEW_EXPRESSION,
	NEW_TOKEN,
	NON_NULL_EXPRESSION,
	NULL,
	NUMBER,
	NUMBER_TOKEN,
	OBJECT,
	OBJECT_ASSIGNMENT_PATTERN,
	OBJECT_PATTERN,
	OBJECT_TYPE,
	OF_TOKEN,
	OMITTING_TYPE_ANNOTATION,
	OPTING_TYPE_ANNOTATION,
	OPTIONAL_PARAMETER,
	OPTIONAL_TYPE,
	PAIR,
	PAIR_PATTERN,
	PARENTHESIZED_EXPRESSION,
	PARENTHESIZED_TYPE,
	PATTERN,
	PERCENT_EQ_TOKEN,
	PERCENT_TOKEN,
	PIPE_EQ_TOKEN,
	PIPE_PIPE_EQ_TOKEN,
	PIPE_PIPE_TOKEN,
	PIPE_RBRACE_TOKEN,
	PIPE_TOKEN,
	PLUS_EQ_TOKEN,
	PLUS_PLUS_TOKEN,
	PLUS_TOKEN,
	PREDEFINED_TYPE,
	PRIMARY_EXPRESSION,
	PRIMARY_TYPE,
	PRIVATE_TOKEN,
	PROGRAM,
	PROPERTY_IDENTIFIER,
	PROPERTY_SIGNATURE,
	PROTECTED_TOKEN,
	PUBLIC_FIELD_DEFINITION,
	PUBLIC_TOKEN,
	QMARK_COLON_TOKEN,
	QMARK_DOT_TOKEN,
	QMARK_QMARK_EQ_TOKEN,
	QMARK_QMARK_TOKEN,
	QMARK_TOKEN,
	RBRACE_TOKEN,
	RBRACK_TOKEN,
	READONLY_TOKEN,
	READONLY_TYPE,
	REGEX,
	REGEX_FLAGS,
	REGEX_PATTERN,
	REQUIRED_PARAMETER,
	REQUIRE_TOKEN,
	REST_PATTERN,
	REST_TYPE,
	RETURN_STATEMENT,
	RETURN_TOKEN,
	RPAREN_TOKEN,
	SEMI_TOKEN,
	SEQUENCE_EXPRESSION,
	SET_TOKEN,
	SHORTHAND_PROPERTY_IDENTIFIER,
	SHORTHAND_PROPERTY_IDENTIFIER_PATTERN,
	SLASH_EQ_TOKEN,
	SLASH_TOKEN,
	SPREAD_ELEMENT,
	SQUOTE_TOKEN,
	STAR_EQ_TOKEN,
	STAR_STAR_EQ_TOKEN,
	STAR_STAR_TOKEN,
	STAR_TOKEN,
	STATEMENT_BLOCK,
	STATEMENT_IDENTIFIER,
	STATIC_TOKEN,
	STRING_LITERAL,
	STRING_TOKEN,
	SUBSCRIPT_EXPRESSION,
	SUPER,
	SWITCH_BODY,
	SWITCH_CASE,
	SWITCH_DEFAULT,
	SWITCH_STATEMENT,
	SWITCH_TOKEN,
	SYMBOL_TOKEN,
	TARGET_TOKEN,
	TEMPLATE_STRING,
	TEMPLATE_SUBSTITUTION,
	TERNARY_EXPRESSION,
	THIS,
	THROW_STATEMENT,
	THROW_TOKEN,
	TILDE_TOKEN,
	TRUE,
	TRY_STATEMENT,
	TRY_TOKEN,
	TUPLE_TYPE,
	TYPEOF_TOKEN,
	TYPE_ALIAS_DECLARATION,
	TYPE_ANNOTATION,
	TYPE_ARGUMENTS,
	TYPE_ASSERTION,
	TYPE_IDENTIFIER,
	TYPE_PARAMETER,
	TYPE_PARAMETERS,
	TYPE_PREDICATE,
	TYPE_PREDICATE_ANNOTATION,
	TYPE_QUERY,
	TYPE_TOKEN,
	UNARY_EXPRESSION,
	UNDEFINED,
	UNION_TYPE,
	UPDATE_EXPRESSION,
	VARIABLE_DECLARATION,
	VARIABLE_DECLARATOR,
	VAR_TOKEN,
	VOID_TOKEN,
	WHILE_STATEMENT,
	WHILE_TOKEN,
	WITH_STATEMENT,
	WITH_TOKEN,
	YIELD_EXPRESSION,
	YIELD_TOKEN,
	WHITESPACE,
	ROOT,
	ERROR,
	__LAST,
}
use SyntaxKind::*;
pub fn tsx_syntax_kind(kind_id: u16) -> SyntaxKind {
	match kind_id {
		289u16 => PRIMARY_TYPE,
		156u16 => DECLARATION,
		191u16 => EXPRESSION,
		247u16 => PATTERN,
		192u16 => PRIMARY_EXPRESSION,
		262u16 => ABSTRACT_CLASS_DECLARATION,
		256u16 => ABSTRACT_METHOD_SIGNATURE,
		274u16 => ACCESSIBILITY_MODIFIER,
		261u16 => AMBIENT_DECLARATION,
		240u16 => ARGUMENTS,
		198u16 => ARRAY,
		199u16 => ARRAY_PATTERN,
		315u16 => ARRAY_TYPE,
		216u16 => ARROW_FUNCTION,
		258u16 => AS_EXPRESSION,
		281u16 => ASSERTS,
		224u16 => ASSIGNMENT_EXPRESSION,
		196u16 => ASSIGNMENT_PATTERN,
		226u16 => AUGMENTED_ASSIGNMENT_EXPRESSION,
		221u16 => AWAIT_EXPRESSION,
		231u16 => BINARY_EXPRESSION,
		178u16 => BREAK_STATEMENT,
		219u16 => CALL_EXPRESSION,
		307u16 => CALL_SIGNATURE,
		188u16 => CATCH_CLAUSE,
		209u16 => CLASS,
		244u16 => CLASS_BODY,
		210u16 => CLASS_DECLARATION,
		211u16 => CLASS_HERITAGE,
		253u16 => COMPUTED_PROPERTY_NAME,
		291u16 => CONDITIONAL_TYPE,
		312u16 => CONSTRAINT,
		313u16 => CONSTRUCT_SIGNATURE,
		288u16 => CONSTRUCTOR_TYPE,
		179u16 => CONTINUE_STATEMENT,
		180u16 => DEBUGGER_STATEMENT,
		241u16 => DECORATOR,
		311u16 => DEFAULT_TYPE,
		175u16 => DO_STATEMENT,
		168u16 => ELSE_CLAUSE,
		183u16 => EMPTY_STATEMENT,
		272u16 => ENUM_ASSIGNMENT,
		271u16 => ENUM_BODY,
		270u16 => ENUM_DECLARATION,
		301u16 => EXISTENTIAL_TYPE,
		154u16 => EXPORT_CLAUSE,
		155u16 => EXPORT_SPECIFIER,
		153u16 => EXPORT_STATEMENT,
		163u16 => EXPRESSION_STATEMENT,
		269u16 => EXTENDS_CLAUSE,
		189u16 => FINALLY_CLAUSE,
		302u16 => FLOW_MAYBE_TYPE,
		172u16 => FOR_IN_STATEMENT,
		171u16 => FOR_STATEMENT,
		246u16 => FORMAL_PARAMETERS,
		212u16 => FUNCTION,
		213u16 => FUNCTION_DECLARATION,
		257u16 => FUNCTION_SIGNATURE,
		320u16 => FUNCTION_TYPE,
		214u16 => GENERATOR_FUNCTION,
		215u16 => GENERATOR_FUNCTION_DECLARATION,
		292u16 => GENERIC_TYPE,
		169u16 => IF_STATEMENT,
		260u16 => IMPLEMENTS_CLAUSE,
		157u16 => IMPORT,
		266u16 => IMPORT_ALIAS,
		159u16 => IMPORT_CLAUSE,
		259u16 => IMPORT_REQUIRE_CLAUSE,
		344u16 => IMPORT_SPECIFIER,
		158u16 => IMPORT_STATEMENT,
		314u16 => INDEX_SIGNATURE,
		296u16 => INDEX_TYPE_QUERY,
		290u16 => INFER_TYPE,
		268u16 => INTERFACE_DECLARATION,
		264u16 => INTERNAL_MODULE,
		319u16 => INTERSECTION_TYPE,
		208u16 => JSX_ATTRIBUTE,
		206u16 => JSX_CLOSING_ELEMENT,
		200u16 => JSX_ELEMENT,
		202u16 => JSX_EXPRESSION,
		201u16 => JSX_FRAGMENT,
		205u16 => JSX_NAMESPACE_NAME,
		203u16 => JSX_OPENING_ELEMENT,
		207u16 => JSX_SELF_CLOSING_ELEMENT,
		184u16 => LABELED_STATEMENT,
		165u16 => LEXICAL_DECLARATION,
		299u16 => LITERAL_TYPE,
		297u16 => LOOKUP_TYPE,
		298u16 => MAPPED_TYPE_CLAUSE,
		222u16 => MEMBER_EXPRESSION,
		239u16 => META_PROPERTY,
		249u16 => METHOD_DEFINITION,
		255u16 => METHOD_SIGNATURE,
		263u16 => MODULE,
		162u16 => NAMED_IMPORTS,
		161u16 => NAMESPACE_IMPORT,
		204u16 => NESTED_IDENTIFIER,
		267u16 => NESTED_TYPE_IDENTIFIER,
		220u16 => NEW_EXPRESSION,
		254u16 => NON_NULL_EXPRESSION,
		194u16 => OBJECT,
		197u16 => OBJECT_ASSIGNMENT_PATTERN,
		195u16 => OBJECT_PATTERN,
		306u16 => OBJECT_TYPE,
		278u16 => OMITTING_TYPE_ANNOTATION,
		279u16 => OPTING_TYPE_ANNOTATION,
		276u16 => OPTIONAL_PARAMETER,
		285u16 => OPTIONAL_TYPE,
		250u16 => PAIR,
		251u16 => PAIR_PATTERN,
		190u16 => PARENTHESIZED_EXPRESSION,
		303u16 => PARENTHESIZED_TYPE,
		304u16 => PREDEFINED_TYPE,
		152u16 => PROGRAM,
		308u16 => PROPERTY_SIGNATURE,
		245u16 => PUBLIC_FIELD_DEFINITION,
		317u16 => READONLY_TYPE,
		238u16 => REGEX,
		275u16 => REQUIRED_PARAMETER,
		248u16 => REST_PATTERN,
		286u16 => REST_TYPE,
		181u16 => RETURN_STATEMENT,
		234u16 => SEQUENCE_EXPRESSION,
		229u16 => SPREAD_ELEMENT,
		167u16 => STATEMENT_BLOCK,
		235u16 => STRING_LITERAL,
		223u16 => SUBSCRIPT_EXPRESSION,
		185u16 => SWITCH_BODY,
		186u16 => SWITCH_CASE,
		187u16 => SWITCH_DEFAULT,
		170u16 => SWITCH_STATEMENT,
		236u16 => TEMPLATE_STRING,
		237u16 => TEMPLATE_SUBSTITUTION,
		230u16 => TERNARY_EXPRESSION,
		182u16 => THROW_STATEMENT,
		176u16 => TRY_STATEMENT,
		316u16 => TUPLE_TYPE,
		273u16 => TYPE_ALIAS_DECLARATION,
		280u16 => TYPE_ANNOTATION,
		305u16 => TYPE_ARGUMENTS,
		310u16 => TYPE_PARAMETER,
		309u16 => TYPE_PARAMETERS,
		293u16 => TYPE_PREDICATE,
		294u16 => TYPE_PREDICATE_ANNOTATION,
		295u16 => TYPE_QUERY,
		232u16 => UNARY_EXPRESSION,
		318u16 => UNION_TYPE,
		233u16 => UPDATE_EXPRESSION,
		164u16 => VARIABLE_DECLARATION,
		166u16 => VARIABLE_DECLARATOR,
		174u16 => WHILE_STATEMENT,
		177u16 => WITH_STATEMENT,
		193u16 => YIELD_EXPRESSION,
		19u16 => BANG_TOKEN,
		90u16 => BANG_EQ_TOKEN,
		91u16 => BANG_EQ_EQ_TOKEN,
		100u16 => DQUOTE_TOKEN,
		107u16 => DOLLAR_LBRACE_TOKEN,
		85u16 => PERCENT_TOKEN,
		62u16 => PERCENT_EQ_TOKEN,
		80u16 => AMP_TOKEN,
		75u16 => AMP_AMP_TOKEN,
		70u16 => AMP_AMP_EQ_TOKEN,
		64u16 => AMP_EQ_TOKEN,
		102u16 => SQUOTE_TOKEN,
		24u16 => LPAREN_TOKEN,
		25u16 => RPAREN_TOKEN,
		4u16 => STAR_TOKEN,
		86u16 => STAR_STAR_TOKEN,
		69u16 => STAR_STAR_EQ_TOKEN,
		60u16 => STAR_EQ_TOKEN,
		83u16 => PLUS_TOKEN,
		98u16 => PLUS_PLUS_TOKEN,
		58u16 => PLUS_EQ_TOKEN,
		10u16 => COMMA_TOKEN,
		84u16 => DASH_TOKEN,
		99u16 => DASH_DASH_TOKEN,
		59u16 => DASH_EQ_TOKEN,
		141u16 => DASH_QMARK_COLON_TOKEN,
		51u16 => DOT_TOKEN,
		73u16 => DOT_DOT_DOT_TOKEN,
		48u16 => SLASH_TOKEN,
		61u16 => SLASH_EQ_TOKEN,
		39u16 => COLON_TOKEN,
		38u16 => SEMI_TOKEN,
		46u16 => LT_TOKEN,
		79u16 => LT_LT_TOKEN,
		68u16 => LT_LT_EQ_TOKEN,
		87u16 => LT_EQ_TOKEN,
		6u16 => EQ_TOKEN,
		88u16 => EQ_EQ_TOKEN,
		89u16 => EQ_EQ_EQ_TOKEN,
		55u16 => EQ_GT_TOKEN,
		47u16 => GT_TOKEN,
		92u16 => GT_EQ_TOKEN,
		77u16 => GT_GT_TOKEN,
		66u16 => GT_GT_EQ_TOKEN,
		78u16 => GT_GT_GT_TOKEN,
		67u16 => GT_GT_GT_EQ_TOKEN,
		74u16 => QMARK_TOKEN,
		56u16 => QMARK_DOT_TOKEN,
		142u16 => QMARK_COLON_TOKEN,
		93u16 => QMARK_QMARK_TOKEN,
		72u16 => QMARK_QMARK_EQ_TOKEN,
		119u16 => AT_TOKEN,
		44u16 => LBRACK_TOKEN,
		45u16 => RBRACK_TOKEN,
		81u16 => CARET_TOKEN,
		63u16 => CARET_EQ_TOKEN,
		106u16 => BQUOTE_TOKEN,
		123u16 => ABSTRACT_TOKEN,
		130u16 => ANY_TOKEN,
		7u16 => AS_TOKEN,
		143u16 => ASSERTS_TOKEN,
		53u16 => ASYNC_TOKEN,
		26u16 => AWAIT_TOKEN,
		132u16 => BOOLEAN_TOKEN,
		33u16 => BREAK_TOKEN,
		40u16 => CASE_TOKEN,
		41u16 => CATCH_TOKEN,
		52u16 => CLASS_TOKEN,
		105u16 => COMMENT,
		18u16 => CONST_TOKEN,
		34u16 => CONTINUE_TOKEN,
		35u16 => DEBUGGER_TOKEN,
		120u16 => DECLARE_TOKEN,
		5u16 => DEFAULT_TOKEN,
		97u16 => DELETE_TOKEN,
		30u16 => DO_TOKEN,
		20u16 => ELSE_TOKEN,
		140u16 => ENUM_TOKEN,
		104u16 => ESCAPE_SEQUENCE,
		3u16 => EXPORT_TOKEN,
		139u16 => EXTENDS_TOKEN,
		116u16 => FALSE,
		42u16 => FINALLY_TOKEN,
		23u16 => FOR_TOKEN,
		15u16 => FROM_TOKEN,
		54u16 => FUNCTION_TOKEN,
		124u16 => GET_TOKEN,
		137u16 => GLOBAL_TOKEN,
		2u16 => HASH_BANG_LINE,
		1u16 => IDENTIFIER,
		21u16 => IF_TOKEN,
		136u16 => IMPLEMENTS_TOKEN,
		14u16 => IMPORT_TOKEN,
		27u16 => IN_TOKEN,
		144u16 => INFER_TOKEN,
		94u16 => INSTANCEOF_TOKEN,
		138u16 => INTERFACE_TOKEN,
		145u16 => IS_TOKEN,
		49u16 => JSX_TEXT,
		146u16 => KEYOF_TOKEN,
		17u16 => LET_TOKEN,
		129u16 => MODULE_TOKEN,
		8u16 => NAMESPACE_TOKEN,
		57u16 => NEW_TOKEN,
		117u16 => NULL,
		111u16 => NUMBER,
		131u16 => NUMBER_TOKEN,
		28u16 => OF_TOKEN,
		127u16 => PRIVATE_TOKEN,
		345u16 => PROPERTY_IDENTIFIER,
		128u16 => PROTECTED_TOKEN,
		126u16 => PUBLIC_TOKEN,
		122u16 => READONLY_TOKEN,
		110u16 => REGEX_FLAGS,
		109u16 => REGEX_PATTERN,
		135u16 => REQUIRE_TOKEN,
		36u16 => RETURN_TOKEN,
		125u16 => SET_TOKEN,
		346u16 => SHORTHAND_PROPERTY_IDENTIFIER,
		347u16 => SHORTHAND_PROPERTY_IDENTIFIER_PATTERN,
		348u16 => STATEMENT_IDENTIFIER,
		121u16 => STATIC_TOKEN,
		133u16 => STRING_TOKEN,
		114u16 => SUPER,
		22u16 => SWITCH_TOKEN,
		134u16 => SYMBOL_TOKEN,
		112u16 => TARGET_TOKEN,
		113u16 => THIS,
		37u16 => THROW_TOKEN,
		115u16 => TRUE,
		31u16 => TRY_TOKEN,
		12u16 => TYPE_TOKEN,
		349u16 => TYPE_IDENTIFIER,
		13u16 => TYPEOF_TOKEN,
		118u16 => UNDEFINED,
		16u16 => VAR_TOKEN,
		96u16 => VOID_TOKEN,
		29u16 => WHILE_TOKEN,
		32u16 => WITH_TOKEN,
		43u16 => YIELD_TOKEN,
		9u16 => LBRACE_TOKEN,
		147u16 => LBRACE_PIPE_TOKEN,
		82u16 => PIPE_TOKEN,
		65u16 => PIPE_EQ_TOKEN,
		76u16 => PIPE_PIPE_TOKEN,
		71u16 => PIPE_PIPE_EQ_TOKEN,
		148u16 => PIPE_RBRACE_TOKEN,
		11u16 => RBRACE_TOKEN,
		95u16 => TILDE_TOKEN,
		65535u16 => SyntaxKind::ERROR,
		_ => panic!("Syntax Kind not found: {}", kind_id),
	}
}
pub fn ts_syntax_kind(kind_id: u16) -> SyntaxKind {
	match kind_id {
		280u16 => PRIMARY_TYPE,
		154u16 => DECLARATION,
		189u16 => EXPRESSION,
		237u16 => PATTERN,
		190u16 => PRIMARY_EXPRESSION,
		253u16 => ABSTRACT_CLASS_DECLARATION,
		246u16 => ABSTRACT_METHOD_SIGNATURE,
		265u16 => ACCESSIBILITY_MODIFIER,
		252u16 => AMBIENT_DECLARATION,
		230u16 => ARGUMENTS,
		196u16 => ARRAY,
		197u16 => ARRAY_PATTERN,
		306u16 => ARRAY_TYPE,
		206u16 => ARROW_FUNCTION,
		249u16 => AS_EXPRESSION,
		272u16 => ASSERTS,
		214u16 => ASSIGNMENT_EXPRESSION,
		194u16 => ASSIGNMENT_PATTERN,
		216u16 => AUGMENTED_ASSIGNMENT_EXPRESSION,
		211u16 => AWAIT_EXPRESSION,
		221u16 => BINARY_EXPRESSION,
		176u16 => BREAK_STATEMENT,
		209u16 => CALL_EXPRESSION,
		298u16 => CALL_SIGNATURE,
		186u16 => CATCH_CLAUSE,
		199u16 => CLASS,
		234u16 => CLASS_BODY,
		200u16 => CLASS_DECLARATION,
		201u16 => CLASS_HERITAGE,
		243u16 => COMPUTED_PROPERTY_NAME,
		282u16 => CONDITIONAL_TYPE,
		303u16 => CONSTRAINT,
		304u16 => CONSTRUCT_SIGNATURE,
		279u16 => CONSTRUCTOR_TYPE,
		177u16 => CONTINUE_STATEMENT,
		178u16 => DEBUGGER_STATEMENT,
		231u16 => DECORATOR,
		302u16 => DEFAULT_TYPE,
		173u16 => DO_STATEMENT,
		166u16 => ELSE_CLAUSE,
		181u16 => EMPTY_STATEMENT,
		263u16 => ENUM_ASSIGNMENT,
		262u16 => ENUM_BODY,
		261u16 => ENUM_DECLARATION,
		292u16 => EXISTENTIAL_TYPE,
		152u16 => EXPORT_CLAUSE,
		153u16 => EXPORT_SPECIFIER,
		151u16 => EXPORT_STATEMENT,
		161u16 => EXPRESSION_STATEMENT,
		260u16 => EXTENDS_CLAUSE,
		187u16 => FINALLY_CLAUSE,
		293u16 => FLOW_MAYBE_TYPE,
		170u16 => FOR_IN_STATEMENT,
		169u16 => FOR_STATEMENT,
		236u16 => FORMAL_PARAMETERS,
		202u16 => FUNCTION,
		203u16 => FUNCTION_DECLARATION,
		247u16 => FUNCTION_SIGNATURE,
		311u16 => FUNCTION_TYPE,
		204u16 => GENERATOR_FUNCTION,
		205u16 => GENERATOR_FUNCTION_DECLARATION,
		283u16 => GENERIC_TYPE,
		167u16 => IF_STATEMENT,
		251u16 => IMPLEMENTS_CLAUSE,
		155u16 => IMPORT,
		257u16 => IMPORT_ALIAS,
		157u16 => IMPORT_CLAUSE,
		250u16 => IMPORT_REQUIRE_CLAUSE,
		333u16 => IMPORT_SPECIFIER,
		156u16 => IMPORT_STATEMENT,
		305u16 => INDEX_SIGNATURE,
		287u16 => INDEX_TYPE_QUERY,
		281u16 => INFER_TYPE,
		259u16 => INTERFACE_DECLARATION,
		255u16 => INTERNAL_MODULE,
		310u16 => INTERSECTION_TYPE,
		182u16 => LABELED_STATEMENT,
		163u16 => LEXICAL_DECLARATION,
		290u16 => LITERAL_TYPE,
		288u16 => LOOKUP_TYPE,
		289u16 => MAPPED_TYPE_CLAUSE,
		212u16 => MEMBER_EXPRESSION,
		229u16 => META_PROPERTY,
		239u16 => METHOD_DEFINITION,
		245u16 => METHOD_SIGNATURE,
		254u16 => MODULE,
		160u16 => NAMED_IMPORTS,
		159u16 => NAMESPACE_IMPORT,
		198u16 => NESTED_IDENTIFIER,
		258u16 => NESTED_TYPE_IDENTIFIER,
		210u16 => NEW_EXPRESSION,
		244u16 => NON_NULL_EXPRESSION,
		192u16 => OBJECT,
		195u16 => OBJECT_ASSIGNMENT_PATTERN,
		193u16 => OBJECT_PATTERN,
		297u16 => OBJECT_TYPE,
		269u16 => OMITTING_TYPE_ANNOTATION,
		270u16 => OPTING_TYPE_ANNOTATION,
		267u16 => OPTIONAL_PARAMETER,
		276u16 => OPTIONAL_TYPE,
		240u16 => PAIR,
		241u16 => PAIR_PATTERN,
		188u16 => PARENTHESIZED_EXPRESSION,
		294u16 => PARENTHESIZED_TYPE,
		295u16 => PREDEFINED_TYPE,
		150u16 => PROGRAM,
		299u16 => PROPERTY_SIGNATURE,
		235u16 => PUBLIC_FIELD_DEFINITION,
		308u16 => READONLY_TYPE,
		228u16 => REGEX,
		266u16 => REQUIRED_PARAMETER,
		238u16 => REST_PATTERN,
		277u16 => REST_TYPE,
		179u16 => RETURN_STATEMENT,
		224u16 => SEQUENCE_EXPRESSION,
		219u16 => SPREAD_ELEMENT,
		165u16 => STATEMENT_BLOCK,
		225u16 => STRING_LITERAL,
		213u16 => SUBSCRIPT_EXPRESSION,
		183u16 => SWITCH_BODY,
		184u16 => SWITCH_CASE,
		185u16 => SWITCH_DEFAULT,
		168u16 => SWITCH_STATEMENT,
		226u16 => TEMPLATE_STRING,
		227u16 => TEMPLATE_SUBSTITUTION,
		220u16 => TERNARY_EXPRESSION,
		180u16 => THROW_STATEMENT,
		174u16 => TRY_STATEMENT,
		307u16 => TUPLE_TYPE,
		264u16 => TYPE_ALIAS_DECLARATION,
		271u16 => TYPE_ANNOTATION,
		296u16 => TYPE_ARGUMENTS,
		248u16 => TYPE_ASSERTION,
		301u16 => TYPE_PARAMETER,
		300u16 => TYPE_PARAMETERS,
		284u16 => TYPE_PREDICATE,
		285u16 => TYPE_PREDICATE_ANNOTATION,
		286u16 => TYPE_QUERY,
		222u16 => UNARY_EXPRESSION,
		309u16 => UNION_TYPE,
		223u16 => UPDATE_EXPRESSION,
		162u16 => VARIABLE_DECLARATION,
		164u16 => VARIABLE_DECLARATOR,
		172u16 => WHILE_STATEMENT,
		175u16 => WITH_STATEMENT,
		191u16 => YIELD_EXPRESSION,
		19u16 => BANG_TOKEN,
		88u16 => BANG_EQ_TOKEN,
		89u16 => BANG_EQ_EQ_TOKEN,
		98u16 => DQUOTE_TOKEN,
		105u16 => DOLLAR_LBRACE_TOKEN,
		83u16 => PERCENT_TOKEN,
		60u16 => PERCENT_EQ_TOKEN,
		78u16 => AMP_TOKEN,
		73u16 => AMP_AMP_TOKEN,
		68u16 => AMP_AMP_EQ_TOKEN,
		62u16 => AMP_EQ_TOKEN,
		100u16 => SQUOTE_TOKEN,
		24u16 => LPAREN_TOKEN,
		25u16 => RPAREN_TOKEN,
		4u16 => STAR_TOKEN,
		84u16 => STAR_STAR_TOKEN,
		67u16 => STAR_STAR_EQ_TOKEN,
		58u16 => STAR_EQ_TOKEN,
		81u16 => PLUS_TOKEN,
		96u16 => PLUS_PLUS_TOKEN,
		56u16 => PLUS_EQ_TOKEN,
		10u16 => COMMA_TOKEN,
		82u16 => DASH_TOKEN,
		97u16 => DASH_DASH_TOKEN,
		57u16 => DASH_EQ_TOKEN,
		139u16 => DASH_QMARK_COLON_TOKEN,
		49u16 => DOT_TOKEN,
		71u16 => DOT_DOT_DOT_TOKEN,
		48u16 => SLASH_TOKEN,
		59u16 => SLASH_EQ_TOKEN,
		39u16 => COLON_TOKEN,
		38u16 => SEMI_TOKEN,
		46u16 => LT_TOKEN,
		77u16 => LT_LT_TOKEN,
		66u16 => LT_LT_EQ_TOKEN,
		85u16 => LT_EQ_TOKEN,
		6u16 => EQ_TOKEN,
		86u16 => EQ_EQ_TOKEN,
		87u16 => EQ_EQ_EQ_TOKEN,
		53u16 => EQ_GT_TOKEN,
		47u16 => GT_TOKEN,
		90u16 => GT_EQ_TOKEN,
		75u16 => GT_GT_TOKEN,
		64u16 => GT_GT_EQ_TOKEN,
		76u16 => GT_GT_GT_TOKEN,
		65u16 => GT_GT_GT_EQ_TOKEN,
		72u16 => QMARK_TOKEN,
		54u16 => QMARK_DOT_TOKEN,
		140u16 => QMARK_COLON_TOKEN,
		91u16 => QMARK_QMARK_TOKEN,
		70u16 => QMARK_QMARK_EQ_TOKEN,
		117u16 => AT_TOKEN,
		44u16 => LBRACK_TOKEN,
		45u16 => RBRACK_TOKEN,
		79u16 => CARET_TOKEN,
		61u16 => CARET_EQ_TOKEN,
		104u16 => BQUOTE_TOKEN,
		121u16 => ABSTRACT_TOKEN,
		128u16 => ANY_TOKEN,
		7u16 => AS_TOKEN,
		141u16 => ASSERTS_TOKEN,
		51u16 => ASYNC_TOKEN,
		26u16 => AWAIT_TOKEN,
		130u16 => BOOLEAN_TOKEN,
		33u16 => BREAK_TOKEN,
		40u16 => CASE_TOKEN,
		41u16 => CATCH_TOKEN,
		50u16 => CLASS_TOKEN,
		103u16 => COMMENT,
		18u16 => CONST_TOKEN,
		34u16 => CONTINUE_TOKEN,
		35u16 => DEBUGGER_TOKEN,
		118u16 => DECLARE_TOKEN,
		5u16 => DEFAULT_TOKEN,
		95u16 => DELETE_TOKEN,
		30u16 => DO_TOKEN,
		20u16 => ELSE_TOKEN,
		138u16 => ENUM_TOKEN,
		102u16 => ESCAPE_SEQUENCE,
		3u16 => EXPORT_TOKEN,
		137u16 => EXTENDS_TOKEN,
		114u16 => FALSE,
		42u16 => FINALLY_TOKEN,
		23u16 => FOR_TOKEN,
		15u16 => FROM_TOKEN,
		52u16 => FUNCTION_TOKEN,
		122u16 => GET_TOKEN,
		135u16 => GLOBAL_TOKEN,
		2u16 => HASH_BANG_LINE,
		1u16 => IDENTIFIER,
		21u16 => IF_TOKEN,
		134u16 => IMPLEMENTS_TOKEN,
		14u16 => IMPORT_TOKEN,
		27u16 => IN_TOKEN,
		142u16 => INFER_TOKEN,
		92u16 => INSTANCEOF_TOKEN,
		136u16 => INTERFACE_TOKEN,
		143u16 => IS_TOKEN,
		144u16 => KEYOF_TOKEN,
		17u16 => LET_TOKEN,
		127u16 => MODULE_TOKEN,
		8u16 => NAMESPACE_TOKEN,
		55u16 => NEW_TOKEN,
		115u16 => NULL,
		129u16 => NUMBER_TOKEN,
		109u16 => NUMBER,
		28u16 => OF_TOKEN,
		125u16 => PRIVATE_TOKEN,
		334u16 => PROPERTY_IDENTIFIER,
		126u16 => PROTECTED_TOKEN,
		124u16 => PUBLIC_TOKEN,
		120u16 => READONLY_TOKEN,
		108u16 => REGEX_FLAGS,
		107u16 => REGEX_PATTERN,
		133u16 => REQUIRE_TOKEN,
		36u16 => RETURN_TOKEN,
		123u16 => SET_TOKEN,
		335u16 => SHORTHAND_PROPERTY_IDENTIFIER,
		336u16 => SHORTHAND_PROPERTY_IDENTIFIER_PATTERN,
		337u16 => STATEMENT_IDENTIFIER,
		119u16 => STATIC_TOKEN,
		131u16 => STRING_TOKEN,
		112u16 => SUPER,
		22u16 => SWITCH_TOKEN,
		132u16 => SYMBOL_TOKEN,
		110u16 => TARGET_TOKEN,
		111u16 => THIS,
		37u16 => THROW_TOKEN,
		113u16 => TRUE,
		31u16 => TRY_TOKEN,
		12u16 => TYPE_TOKEN,
		338u16 => TYPE_IDENTIFIER,
		13u16 => TYPEOF_TOKEN,
		116u16 => UNDEFINED,
		16u16 => VAR_TOKEN,
		94u16 => VOID_TOKEN,
		29u16 => WHILE_TOKEN,
		32u16 => WITH_TOKEN,
		43u16 => YIELD_TOKEN,
		9u16 => LBRACE_TOKEN,
		145u16 => LBRACE_PIPE_TOKEN,
		80u16 => PIPE_TOKEN,
		63u16 => PIPE_EQ_TOKEN,
		74u16 => PIPE_PIPE_TOKEN,
		69u16 => PIPE_PIPE_EQ_TOKEN,
		146u16 => PIPE_RBRACE_TOKEN,
		11u16 => RBRACE_TOKEN,
		93u16 => TILDE_TOKEN,
		65535u16 => SyntaxKind::ERROR,
		_ => panic!("Syntax Kind not found: {}", kind_id),
	}
}
